{"version":3,"sources":["components/container/Container.module.css","components/phonebook/Contacts.module.css","components/container/Container.js","components/phonebook/ContactList.js","components/phonebook/ContactForm.js","components/phonebook/Filter.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactList","props","contacts","onDeleteContact","item","map","id","name","number","type","onClick","ContactForm","useState","setName","setNumber","handleChange","e","currentTarget","value","label","input","form","button","buttonActive","length","onSubmit","preventDefault","onAddNewContact","pattern","title","required","onChange","placeholder","disabled","Filter","onChangeFilter","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","normolizedFilter","toLowerCase","visibleContacts","contact","includes","shortId","generate","addSameName","addSameNumber","alert","target","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ed2cb6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3fra3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Contacts_form__yLmMj\",\"label\":\"Contacts_label__357Qy\",\"input\":\"Contacts_input__3k6IK\",\"button\":\"Contacts_button__3fL3l\",\"item\":\"Contacts_item__2M-31\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nfunction ContactList(props) {\r\n  const { contacts, onDeleteContact } = props;\r\n  const { item } = s;\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={item} key={id}>\r\n          <span>\r\n            {name}: {number}\r\n          </span>\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nfunction ContactForm(props) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onAddNewContact(name, number);\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const { label, input, form, button } = s;\r\n  const buttonActive = name.length > 0 && number.length > 0;\r\n\r\n  return (\r\n    <form className={form} onSubmit={handleSubmit}>\r\n      <label className={label}>\r\n        Name\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          placeholder=\" \"\r\n        />\r\n      </label>\r\n      <label className={label}>\r\n        Number\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          placeholder=\" \"\r\n        />\r\n      </label>\r\n      <button className={button} type=\"submit\" disabled={!buttonActive}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nfunction Filter(props) {\r\n  const { value, onChangeFilter } = props;\r\n  const { label, input } = s;\r\n\r\n  return (\r\n    <label className={label}>\r\n      Filter contacts by name\r\n      <input\r\n        className={input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n        placeholder=\" \"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\r\nimport shortId from 'shortid';\r\nimport Container from './container/Container';\r\nimport ContactList from './phonebook/ContactList';\r\nimport ContactForm from './phonebook/ContactForm';\r\nimport Filter from './phonebook/Filter';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      setContacts(parsedContacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }, [contacts]);\r\n\r\n  const addNewContact = (name, number) => {\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const addSameName = contacts.map(contact => contact.name).includes(name);\r\n    const addSameNumber = contacts\r\n      .map(contact => contact.number)\r\n      .includes(number);\r\n\r\n    if (addSameName) {\r\n      alert(`${name} is already in contacts`);\r\n    } else if (addSameNumber) {\r\n      alert(`${number} is already in contacts`);\r\n    } else {\r\n      setContacts([contact, ...contacts]);\r\n    }\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(contacts.filter(contact => contact.id !== contactId));\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    const target = e.currentTarget;\r\n\r\n    setFilter(target.value);\r\n  };\r\n\r\n  const normolizedFilter = filter.toLowerCase();\r\n\r\n  const visibleContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normolizedFilter),\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onAddNewContact={addNewContact} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter onChangeFilter={changeFilter} />\r\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}